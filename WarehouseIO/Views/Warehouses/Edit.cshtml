@using WarehouseIO.ControlClasses
@using WarehouseIO.Models
@model Warehouse

@{
    ViewBag.Title = "Edit Warehouse";
    string errorMessage = ErrorHandler.MissingInputsErrorMessage<Warehouse>(ViewData, Warehouse.GetPropertiesNames());
    string viewBagErrorMessage = ViewBag.ErrorMessage;
}

@using (@Html.BeginForm("Edit", "Warehouses", FormMethod.Post, htmlAttributes: new { @class = "type1-add-edit-view-page" }))
{
    <header>
        <h1>Edit Warehouse</h1>
    </header>
    <div class="add-warehouse-wrapper">
        <div class="add-warehouse-container">
            <div class="add-warehouse-item">
                @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(m => m.Name, htmlAttributes: new { @class = "" })
            </div>
            <div class="add-warehouse-item">

                @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(m => m.Description, htmlAttributes: new { @class = "" })
            </div>
            <div class="add-warehouse-item">

                @Html.LabelFor(m => m.Location, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(m => m.Location, htmlAttributes: new { @class = "" })
            </div>
            <div class="add-warehouse-item">

                @Html.LabelFor(m => m.MaxCapacity, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(m => m.MaxCapacity, htmlAttributes: new { @class = "", type = "number" })
            </div>
            @Html.HiddenFor(m => m.Id, htmlAttributes: new { @class = "" })

        </div>
    </div>
    <footer>
        @if (!string.IsNullOrEmpty(viewBagErrorMessage))
        {
            <p class="page-error-message">@viewBagErrorMessage</p>
        }
        else if (!string.IsNullOrEmpty(errorMessage))
        {
            @Html.ValidationSummary("", new { @class = "page-error-message" })

        }
        else
        {
            <p class="page-error-message">
                &#8203;
            </p>
        }
    </footer>
    <div class="page-main-buttons">
        <button class="btn-default page-main-button">Save</button>
        @Html.ActionLink("Manage Warehouse", "Index", "Warehouses", routeValues: new { warehouseId = Model.Id }, htmlAttributes: new { @class = "btn-default page-main-button" })
        @Html.ActionLink("To Dashboard", "Dashboard", "Home", routeValues: new {warehouseId = Model.Id}, htmlAttributes: new { @class = "btn-default page-main-button shade2-background" })

    </div>
}

