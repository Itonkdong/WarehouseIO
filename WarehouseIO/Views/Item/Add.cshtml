@using System.Web.UI.WebControls
@using WarehouseIO.ControlClasses
@using WarehouseIO.CustomHtmlHelpers
@using WarehouseIO.Models
@using WarehouseIO.ViewModels
@model WarehouseIO.ViewModels.AddEditItemViewModel

@{
    ViewBag.Title = "Add Item";
    string errorMessage = ErrorHandler.MissingInputsErrorMessage<AddEditItemViewModel>(ViewData, AddEditItemViewModel.GetPropertiesNames());
    string tempError = (string)TempData["ErrorMessage"];
}


@using (Html.BeginForm("Add", "Item", FormMethod.Post, htmlAttributes: new { @class = "type2-add-edit-view-page" }))
{
    <header>
        <h1>Add Item</h1>
    </header>
    <section class="warehouse-info-box">
        <h4 class="warehouse-info-box-header">Warehouse Info</h4>
        <div class="warehouse-info-box-items">
            <div class="warehouse-info-box-item">
                <h5>
                    @Html.DisplayNameFor(m => m.Warehouse.Name):
                </h5>
                <div>@Html.DisplayTextFor(m => m.Warehouse.Name)</div>
                @Html.HiddenFor(m=>m.WarehouseId)
            </div>
            <div class="warehouse-info-box-item">
                <h5>
                    @Html.DisplayNameFor(m => m.Warehouse.Description):
                </h5>
                <div>@Html.DisplayTextFor(m => m.Warehouse.Description)</div>
            </div>
            <div class="warehouse-info-box-item">
                <h5>
                    @Html.DisplayNameFor(m => m.Warehouse.Location):
                </h5>
                <div>@Html.DisplayTextFor(m => m.Warehouse.Location)</div>
            </div>
            <div class="warehouse-info-box-item">
                <h5>
                    @Html.DisplayNameFor(m => m.Warehouse.CurrentCapacity):
                </h5>
                <div>@Html.DisplayTextFor(m => m.Warehouse.CurrentCapacity)/@Html.DisplayTextFor(m => m.Warehouse.MaxCapacity) Units</div>
            </div>
            <div class="warehouse-info-box-item">
                @* @Html.ActionLink("Manage Warehouse", "Index", "Warehouses", routeValues: new { id = Model.WarehouseId }, htmlAttributes: new { @class = "btn-default btn-small" }) *@
                @Html.ActionLink("Manage Warehouse", "Index", "Warehouses", new { warehouseId = Model.WarehouseId }, new { @class = "btn-default btn-small" })

            </div>

        </div>

    </section>
    <section class="form-interact-section">
        <h5>Item Info</h5>
        <div class="add-item-items">
            <div class="add-item-item">
                @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(m => m.Name, htmlAttributes: new { @class = "" })
            </div>
            <div class="add-item-item">
                @Html.LabelFor(m => m.Description, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(m => m.Description, htmlAttributes: new { @class = "" })
            </div>
            <div class="add-item-item">
                @Html.LabelFor(m => m.Type, htmlAttributes: new { @class = "" })
                @Html.DropDownListFor(m => m.Type,EnumHandler.GetSelectList<ItemType>(Model.AllItemTypes.ToList()) , htmlAttributes: new { })

            </div>
            <div class="add-item-item">
                @Html.LabelFor(m => m.ImageUrl, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(m => m.ImageUrl, htmlAttributes: new { @class = "" })
            </div>
            <div class="add-item-item">
                @Html.LabelFor(m => m.EstPrice, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(m => m.EstPrice, htmlAttributes: new { @class = "" })
            </div>
            <div class="add-item-item">
                @Html.LabelFor(m => m.Size, htmlAttributes: new { @class = "custom-tooltip", data_title = "In cm3" })
                @Html.TextBoxFor(m => m.Size, htmlAttributes: new { @class = "" })
            </div>
            <div class="add-item-item ">
                @Html.LabelFor(m => m.Amount, htmlAttributes: new { @class = "" })
                @Html.TextBoxFor(m => m.Amount, htmlAttributes: new { @class = "" })
            </div>
        </div>
    </section>
    <footer>
        @Html.ErrorMessageSummary(errorMessage, tempError)
    </footer>
    <div class="page-main-buttons">
        <button class="btn-default page-main-button">Add</button>
        @Html.ActionLink("To Dashboard", "Dashboard", "Home", routeValues: new {warehouseId = Model.WarehouseId}, htmlAttributes: new { @class = "btn-default page-main-button shade2-background" })
    </div>
}

